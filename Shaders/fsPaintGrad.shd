//=============================================================================
//
// fsFoliage.shd
// based on fslit_nm.shd
//
//=============================================================================

#define SHADER_TYPE 2

#define FOG 1
#define KEYHOLING 1
#define LIGHTING 1

#define NORMAL_MAP 1
#define SPECULAR_MAP 1
#define ROUGHNESS_MAP 1
#define HEIGHT_MAP 0
#define SELF_ILLUMINATION_MAP 0
#define ENVIRONMENT_MAP 0

#define POSITION_WORLD 1

#include "inc_standard"

//const float hueMap[1024] = float[1024](25.4206,25.8178,25.5787,25.5787,25.5787,25.8178,25.8178,25.8178,26.0613,26.3095,26.4623,26.0613,25.6604,25.5,25.5,25.3365,25.1699,25.5825,25.0,25.0,25.4167,25.1531,23.4483,21.25,19.0298,18.5937,18.8889,18.8115,18.0085,17.5862,15.9375,16.4035,16.5678,17.2881,16.8534,16.8534,16.5678,17.0,15.5833,15.8475,16.2917,17.6538,19.7945,20.9877,21.5,21.4943,21.0,20.2134,20.1875,19.6563,19.6563,19.9383,20.0,18.9458,17.4359,16.0811,15.3472,14.5714,14.7569,15.5068,15.8667,15.4545,16.6772,17.2152,17.5313,17.4096,18.0,17.7907,18.8352,20.1316,21.25,21.25,21.0112,21.4888,22.6064,22.7525,22.302,21.25,20.788,21.0112,20.5337,20.0287,20.2616,20.5172,20.5337,19.6154,19.6154,19.2368,18.7895,18.151,17.3656,17.2802,17.3864,17.7472,17.3656,17.0924,16.5278,16.0556,16.4205,17.191,17.633,17.9639,17.8226,17.191,16.6092,15.814,15.6845,16.1905,15.5,16.3081,16.5,16.8023,16.8023,16.0,14.3373,13.8125,14.875,14.875,14.5122,15.0305,15.7407,14.6914,13.3133,13.1548,12.439,12.0679,11.9207,11.6369,11.7241,11.7241,11.7241,12.6099,13.4211,12.9737,12.3387,12.7957,12.5263,12.6596,12.75,12.3546,13.8483,14.3112,13.7619,12.8302,11.3614,11.5104,11.4247,10.9831,10.7471,9.6131,9.21687,9.6131,9.21687,8.81098,9.21687,9.6131,8.81098,8.06962,8.6076,8.39507,8.19277,8.09524,8.5,7.82895,8.04054,7.56849,8.5,8.37121,7.84615,8.8806,9.375,8.63281,7.66393,7.79167,7.79167,8.20175,9.27273,11.0185,11.2264,11.2264,10.2,10.2,10.625,11.8056,12.0283,13.5638,12.5568,12.0109,12.2778,13.2222,13.8587,12.9348,12.5568,13.2222,13.8587,14.4886,15.4545,15.814,15.1786,15.1786,15.1786,16.4205,17.5544,17.9444,15.1786,14.5122,16.1905,15.814,15.5488,13.8125,14.1667,14.1667,14.9324,14.5714,14.5714,14.1667,14.1667,14.1667,12.9861,14.1667,16.25,16.7424,17.5,19.3182,18.4167,19.0517,19.8333,17.0,17.0,16.1207,17.0,17.0,17.0,17.0,19.1935,18.2143,17.7083,17.0,17.0,17.0,17.0,17.9808,17.0,17.0,17.0,16.3462,17.3148,18.2143,19.8333,18.75,17.0,17.7083,17.2297,17.2297,17.2297,16.0811,17.2297,17.2297,17.2297,16.7763,17.8947,17.8947,18.3784,18.2143,20.0,19.3182,18.5938,18.5938,17.8226,18.5938,18.5938,17.2656,17.2656,17.2656,16.4516,16.4516,16.4516,16.4516,15.0806,17.0,16.1207,17.5862,16.1207,17.0,17.8226,18.5938,19.1935,19.0517,18.4167,18.0303,17.5,18.5938,16.7424,16.4516,16.7424,17.2656,18.5938,19.1936,19.8333,19.9219,20.6061,21.9355,22.7679,21.25,23.4483,23.4483,22.6667,22.6667,22.6667,21.9355,21.25,20.6061,20.6061,20.0,18.0303,17.5,18.0303,18.0303,18.0303,18.5938,17.8226,17.5862,17.3148,15.3,15.3,14.1667,14.7826,13.5227,12.9348,12.9348,12.9348,12.9348,13.6,13.0769,12.5926,13.6607,14.1667,16.6964,16.6964,16.6964,17.5862,16.1207,17.0,15.5833,16.3462,15.0,13.0769,13.0769,12.1429,9.80769,15.4545,14.1667,14.1667,19.6154,20.0,20.1316,21.25,20.5172,21.9355,23.3065,21.9355,22.037,21.25,24.6053,28.3333,30.9091,47.8125,48.5714,47.8125,47.2222,47.2222,47.2222,42.5,42.5,35.9615,34.0,28.3333,24.6053,26.8421,24.6053,24.6053,24.6053,24.6053,25.5,25.5,27.625,29.0789,29.0789,32.5,31.875,34.5313,31.875,34.0,36.4286,36.4286,35.9615,38.9583,38.25,42.5,42.5,48.5715,49.5833,49.5833,42.5,42.5,42.5,34.7727,32.6923,33.3929,31.875,30.0,28.3333,29.0789,27.625,27.0455,26.5625,23.4483,21.8939,19.6154,18.2143,18.2143,17.7907,17.3864,17.3864,17.0,17.0,16.2766,15.0521,14.1667,14.7449,14.7449,13.8776,13.8776,14.45,13.6,13.0102,13.0102,12.1429,12.5,12.2596,13.0769,10.8333,10.8333,12.75,16.6667,14.1667,14.4196,15.2358,15.8333,14.45,14.7115,14.434,14.434,13.8942,12.5,12.2596,10.8333,11.4423,12.8302,14.434,13.0769,12.5,12.5,13.0769,13.0769,13.0769,13.6321,13.0769,13.6321,14.1667,14.9537,15.2358,14.434,14.1667,15.2358,15.7407,15.0,15.3,16.4796,15.9375,15.6122,15.3723,14.4681,15.9375,17.0,16.8023,15.1786,14.8256,15.814,15.814,15.814,15.1786,15.5488,15.5488,16.5854,15.5488,14.5122,13.8125,14.875,15.5488,15.5488,16.5854,16.5854,16.1905,15.5488,16.5854,17.622,18.0625,17.0,14.5122,13.4756,13.8125,16.5854,16.1905,17.0,17.622,18.2143,17.0,16.7763,15.6579,15.2564,16.3462,17.4359,15.2564,14.1667,15.9375,14.5395,14.9324,15.2564,17.0,15.9375,16.3462,17.4359,18.0625,18.0625,17.0,17.622,17.7907,17.9444,17.3864,16.4205,17.0,17.5543,17.1809,18.0851,18.0851,18.9894,18.8889,17.9444,18.8889,18.8889,18.8889,18.3523,18.3523,17.9444,18.8889,17.9444,16.8023,16.8023,17.0,17.5543,18.4783,17.0,17.9444,18.8889,18.8889,17.5543,17.5543,17.1809,16.6304,17.0,17.0,17.9444,17.9444,17.7083,18.0851,17.7083,17.3469,17.85,17.7083,19.0816,20.3646,19.949,18.2143,18.2143,17.7083,17.3469,16.4796,17.1809,17.5543,17.5543,17.1809,17.1809,18.0851,17.7083,17.3469,18.2143,17.0,16.4796,15.9375,17.0,16.4796,16.15,16.15,16.15,16.4796,17.1809,16.8229,18.4783,18.8889,19.2262,19.6154,20.6757,21.8571,20.6429,20.0694,20.6429,21.8939,20.5645,20.5172,22.8846,25.8696,27.0455,26.8421,30.0,35.7895,33.6458,29.9074,28.3333,28.9,28.9,30.1042,31.413,32.3,32.3,34.0,33.6458,34.4048,35.7895,33.5526,36.125,36.125,34.4048,32.8409,30.9091,30.1042,29.4231,26.3793,25.7576,25.2703,24.878,23.7209,23.7209,22.6667,21.7222,22.2159,22.7326,20.7778,19.8936,20.3646,20.3261,22.1739,23.1818,24.2857,22.8049,21.8243,23.0714,25.5,26.7143,27.9605,28.6875,27.6744,25.1136,24.7093,24.4375,25.7237,25.9722,26.8421,27.2436,26.9512,26.9512,26.8421,26.25,24.4697,26.25,25.0,24.1216,24.6053,23.6111,23.6111,24.4375,23.9744,22.973,24.1216,25.0641,24.2857,23.1818,21.7442,21.7683,23.375,22.8049,22.7326,22.7326,23.6111,20.7558,17.7907,17.0,18.4783,18.4783,19.0816,19.0816,18.5938,18.8889,17.3864,16.4205,16.0556,18.0851,19.949,20.4,19.0816,18.7,20.0,18.3333,17.0,17.7083,19.4792,19.949,18.5938,18.0851,18.0851,18.2143,18.7,18.5938,19.8333,20.2841,21.25,21.7949,21.8243,22.8846,23.375,24.878,24.2857,22.8049,22.3125,21.8243,20.6429,18.8889,19.527,21.8243,23.4868,22.3125,21.25,21.25,20.7778,20.3261,19.8936,19.4022,18.3523,19.7674,21.25,21.25,20.2841,20.7558,20.7317,20.2381,20.2841,21.7222,22.7326,23.7209,23.1818,22.1739,21.7222,21.7442,21.25,21.7442,22.2159,21.25,21.25,21.6837,20.3646,21.25,21.6837,23.4184,23.0208,22.1739,21.25,21.25,21.25,21.6837,21.25,20.4,21.25,20.8163,20.8163,20.8163,21.25,20.3646,19.949,18.2143,17.7083,18.9894,20.7979,21.7021,20.7778,20.7778,21.7222,20.7979,20.7778,20.2381,20.7558,20.7979,19.0816,19.949,20.3646,19.4792,19.55,19.55,22.5,20.8333,20.8333,21.25,20.4,20.8163,21.7021,23.0978,24.0217,24.9457,23.6111,22.1739,21.7021,21.25,21.25,22.1739,23.0208,24.4149,23.6111,23.1818,21.7222,22.6064,24.7917,23.4184,21.6837,22.1354,22.95,22.1,21.6837,21.6837,21.25,22.1739,22.1739,22.6667,22.6064,22.551,21.6837,21.25,21.6837,21.25,21.25,20.7979,22.1354,23.5106,24.0217,23.0978,22.1739,23.0978,23.5106,24.0217,24.4149,24.4149,24.4149,24.1477,21.7949,22.3684,21.8243,23.75,25.2344,25.2344,25.7576,24.2857,23.6111,24.7917,25.5,20.6429,18.8889,19.527,21.25,20.7051,17.4359,14.875,16.3462,17.0,17.2024,18.8889,18.9894,17.7083,16.8229,18.5938,19.1667,19.55,21.6837,21.6667,20.0472,19.55,20.4327,19.1667,19.2453,19.6759,18.7981,19.2453,18.8889,19.3182,18.8889,18.8889,19.7321,20.4911,20.1316,20.1316,20.1316,20.4911,20.8333,21.25,19.8333,18.3523,18.8889,20.7979,21.6837,21.6837,22.1,21.25,20.8636,20.8772,20.5172,20.5172,20.5172,20.5172,20.1316,20.4911,20.8636,20.0472,21.6509,22.037,22.037,22.4528,21.25,20.7558,20.7778,22.6667,21.7021,20.0,17.9808,18.1019,18.8889,18.8889,19.3182,18.2143,18.6404,18.319,17.5862,18.319,18.0085,17.7083,16.7213,16.7213,16.7213,18.1148,18.2143,17.1371,15.8475,15.6579,17.0,17.3148,16.8396,15.0,14.4681,16.0555,16.8229,15.8333,17.1635,19.2453,21.25,21.25,19.5082,18.2143,17.5397,17.2656,17.0,16.7424,18.3077,18.5938,18.5938,18.2143,18.8889,17.9297,18.2143,18.2143,18.2143,17.9297,18.3955,18.4783,18.6742,18.3077,18.0303,17.5,17.0,16.6304,16.6304,17.0,16.3929,16.162,17.1181,17.2297,17.5667,17.2297,17.4658,17.1181,16.8836,17.0,16.6554,16.7606,17.1181,17.4658,17.1181,17.1181,16.8836);

uniform sampler2D texUnit6;

// All components are in the range [0…1], including hue.
vec3 rgb2hsv(vec3 c)
{
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

 

// All components are in the range [0…1], including hue.
vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}


vec3 hueReplace(vec3 color, float hue) {
	vec3 hsv = rgb2hsv(color);
	hsv.x = hue;
	//hsv.y /= PI/2.0;
	//hsv.z *= PI;
	vec3 rgb = hsv2rgb(hsv);
	return rgb;
}


void main ()
{
    FragmentColor = vec4(1.0);
 	SetupStandardShaderInputs();

	//get some noise
	float n = texture2D(texUnitNoise, vPosWorld.xy).r;

	//get world elevation	
	float z = (vPosWorld.z/10.0) + n/200.0;
		
	//get hue associated with elevation 
	vec3 vGradientColor = texture2D(texUnit6, vec2(1.0,z)).rgb;
		
	//replace hue
    //FragmentColor.rgb = (FragmentColor.rgb + (PI*vGradientColor.rgb))/PI;

    ApplyStandardShader();	
	
    gl_FragColor = FragmentColor;
}
